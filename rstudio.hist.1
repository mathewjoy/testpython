help()
help(install)
help.install()
install.packages("KernSmooth")
load("KernSmooth")
load(KernSmooth)
library(KernSmooth)
x<-c("a","b")
x<-function(){5}
x
x()
install_from_swirl("R Programming")
install_from_swirl("R Programming")
library(swirl)
swirl()
install_from_swirl("R Programming")
swirl()
5+7
x<-5+7
x
y<-x-3
y
c(1.1,9,3.14)
z<-c(1.1,9,3.14)
?c
z
j<-c(z,555)
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4) + c(0.10)
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
swirl()
5+7
quit()
library(swirl)
swirl()
1:20
pi:10
15:27
15:17
15:1
?':'
seq(1,20)
seq(1,10, by = .5)
seq(1,10, by = 0.5)
seq(0,10, by = 0.5)
my_seq=seq(5,10,30)
my_seq=seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my.seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
lapply()
cls_list<-lapply(flags,class)
class(cls_list)
as.character(cls_list)
?sapply
cls_list<-sapply(flags,class)
sapply(flags,class)
cls_vect <- sapply(flags,class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_colors,range)
sapply(flag_shapes,range)
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_order <- sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(4,5,5,5,6,6)
unique(3,4,5,5,5,6,6)
unique((c(3,4,5,5,5,6,6)
)
)
unique(c(3,4,5,5,5,6,6))
lapply(flags, range)
lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
unique_vals <- sapply(flags, unique)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
swirl()
dim(flags)
dim(head)
head(flags)
flags
quit()
info()
main()
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
vapply(flags,class)
sapply(flags,class)
vapply(flags,class,numeric(1))
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
play()
flags$animate
info()
nxt()
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
?sample
sample(1:6, 4, replace=T)
sample(1:6, 4, replace=TRUE)
sample(1:6, 1, replace=TRUE)
play()
sample(1:6, 1, replace=TRUE)
sample(1:6, 1, replace=TRUE)
sample(1:6, 1, replace=TRUE)
sample(1:6, 1, replace=TRUE)
sample(1:6, 1, replace=TRUE)
play()
nxt()
sample(1:6, 4, replace=TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1),100,prob=c(.3,.7))
sample(c(0,1),100,replace=TRUE, prob=c(.3,.7))
flips<-sample(c(0,1),100,replace=TRUE, prob=c(.3,.7))
fplips
flips
sum(flips)
?rbinom
rbinom(1, size=100, prob=.7)
rbinom(100, size=1, prob=.7)
flips2=rbinom(100, size=1, prob=.7)
flips2<-rbinom(100, size=1, prob=0.7)
flips2
sum(flips2)
?rnorm
norm(10)
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpos
?rpois
pois(5, 5)
rpois(5, 5)
rpois(5, 10)
replicate(100, rpois(5, 10))
my_pois<-replicate(100, rpois(5, 10))
my_pois
quit);
quit()
setwd("~/coursera/datasciencecoursera/specdata")
f<-read.csv(100.csv)
f<-file.csv(100.csv)
savehistory("~/coursera/datasciencecoursera/rstudio.hist.1")
